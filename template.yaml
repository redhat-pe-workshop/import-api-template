apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: import-api-catalog
  title: Import Existing API
  description: Import existing API, autocreate config-info.yaml and conditionally setup techdocs.
  tags:
    - import
    - catalog
    - register
    - api
spec:
  owner: platformengineers
  system: rhdh
  type: template

  parameters:
    - title: Provide information about Catalog Envelope to which API will be included
      required:
        - gitlabHost
        - envelopeGitlabOrganization
        - envelopeRepositoryName
      properties:
        gitlabHost:
          title: Gitlab hostname
          type: string
          description: Your gitlab
          default: {{ gitlab_host }}
          enum:
            - {{ gitlab_host }}
        envelopeGitlabOrganization:
          title: GitLab Organization
          type: string
        envelopeRepositoryName:
          title: Repository name
          type: string
          description: Please ensure this repo exists

    - title: Provide information about your existing API
      required:
        - gitlabOrganization
        - repositoryName
        - system
        - apiType
        - apiPathText
      properties:
        gitlabOrganization:
          title: GitLab Organization
          type: string
        repositoryName:
          title: Repository name
          type: string
          description: Please ensure this repo exists
        system:
          title: System name
          description: This is the application name that helps to group components easily
          type: string
          ui:field: EntityPicker
          ui:options:
            catalogFilter:
              kind: System
        apiPathText:
          title: API specification path
          description: This will need to be the full path where the API specification is stored in the repository. 
          type: string
        apiType:
          title: Type of API
          type: string
          default: OpenAPI
          description: Usual types are openapi, grpc, Avro etc
          enum:
          - openapi
          - grpc
          - graphql
          - tRPC 
          - Avro
          - Dataset
          - Other
          allowArbitraryValues: true

    - title: Provide information about the new component for your existing API
      required:
        - componentOwner
        - lifecycle
      properties:
        componentName:
          title: Component Name
          type: string
          description: Name of the component. (Defaults to the repo name)
          default: 
        componentOwner:
          title: Owner
          description: Select an owner from the list or enter a reference to a Group or a User
          type: string
          ui:field: EntityPicker
          ui:options:
            catalogFilter:
              kind:
                - Group
                - User
        description:
          title: A short description of this component
          description: A short description of this component
          type: string
        lifecycle:
          title: Lifecycle
          type: string
          description: 'The lifecycle state of the component. Well-known and common values: experimental, production, deprecated.'
          default: experimental

  steps:
    - id: fetch-envelope=repo
      name: Fetch envelope catalog repo
      action: fetch:template
      targetPath: ../.
      input:
        url: https://{{ '${{ parameters.gitlabHost }}' }}/{{ '${{ parameters.gitlabOrganization }}' }}/{{ '${{ parameters.envelopeRepositoryName }}' }}
        
    - id: append-file
      name: Append To File Or Create New
      action: roadiehq:utils:fs:append
      input:
        path: ./envelope.yaml
        content: "\n    - https://{{ '${{ parameters.gitlabHost }}' }}/{{ '${{ parameters.gitlabOrganization }}' }}/{{ '${{ parameters.envelopeRepositoryName }}' }}/-/blob/main/{{ '${{ parameters.repositoryName }}' }}/catalog-info.yaml"

    # Merge envelope  into EXISTING repo  - only EXISTING REPO
    - id: publishCatalogEnvelopeMergeRequest
      name: Open PR with envelope.yaml
      action: publish:gitlab:merge-request
      input: 
        repoUrl: "{{ '${{ parameters.gitlabHost }}' }}?repo={{ '${{ parameters.envelopeRepositoryName }}' }}&owner={{ '${{ parameters.envelopeGitlabOrganization }}' }}"
        commitMessage: Commit for component {{ '${{ parameters.componentName }}' }}'
        title: Open PR for update to catalog envelope
        description: Open PR with catalog-info.yaml
        sourcePath: ./
        targetPath: ./
        commitAction: update
        branchName: envelope-{{ '${{ parameters.componentName }}' }}-update
        removeSourceBranch: true


    # Step2: Create catalog-info file for the component
    - id: catalogTemplate
      name: Fetch catalog-info  template
      action: fetch:template
      input:
        url: ./templates
        targetPath: ./patch
        values:
          applicationType: "API"
          component_id: {{ '${{ parameters.componentName }}' }}
          componentName: {{ '${{ parameters.componentName }}' }}
          componentLifecycle: {{ '${{ parameters.componentLifecycle }}' }}
          description: {{ '${{ parameters.description }}' }}
          destination: "{{ '${{ parameters.gitlabHost }}' }}/{{ '${{ parameters.gitlabOrganization }}' }}/{{ '${{ parameters.repositoryName }}' }}"
          host: {{ '${{ parameters.gitlabHost }}' }}
          owner: {{ '${{ parameters.componentOwner }}' }}
          orgName: {{ '${{ parameters.gitlabOrganization }}' }}
          repoName: {{ '${{ parameters.repositoryName }}' }}
          system: {{ '${{ parameters.system }}' }}
          apiType: {{ '${{ parameters.apiType }}' }}
          apiPathText: {{ '${{ parameters.apiPathText }}' }}

    
    # Merge catalog-info and techdocs into EXISTING repo   - only EXISTING REPO
    - id: publishComponentMergeRequest
      name: Open PR with for all-catalog
      action: publish:gitlab:merge-request
      input: 
        repoUrl: "{{ '${{ parameters.gitlabHost }}' }}?repo={{ '${{ parameters.envelopeRepositoryName }}' }}&owner={{ '${{ parameters.gitlabOrganization }}' }}"
        title: Open PR with catalog-info.yaml
        description: Open PR with catalog-info.yaml
        branchName: "{{ '${{ parameters.componentName }}' }}-create"
        sourcePath: ./patch
        targetPath: "{{ './${{ parameters.repositoryName }}' }}"
        commitAction: create
        removeSourceBranch: true    


  

  output:
    links:
      - url: {{ '${{ steps.publishCatalogEnvelopeMergeRequest.output.mergeRequestUrl }}' }}
        title: 'Component merge request'
      - url: {{ '${{ steps.publishComponentMergeRequest.output.mergeRequestUrl }}' }}
        title: 'Catalog Envelope update merge request'
  
